// Test Font Helpers
// =================


// Font Get
// --------
@include test-module('Font Get [function]') {
  $expect: (
    'stack': ('Georgia', 'serif'),
    'normal': 'centuryoldstyle-regular-filename',
    'italic': false,
  );

  @include test('Get a font directly') {
    @include assert-equal(
      _font-get('CenturyOldStyle'),
      $expect,
      'Returns a map based on font config key');
  }

  @include test('Get a font by alias') {
    @include assert-equal(
      _font-get('kevin bacon'),
      $expect,
      'Returns a map based on recursive font config key');
  }
}


// Font Src
// --------
@include test-module('Font Src [function]') {
  @include test('Build a CSS-ready item for the font src property') {
    @include assert-equal(
      _font-src('myfont', 'eot', '?#iefix'),
      font-url('myfont.eot?#iefix') format('embedded-opentype'),
      'Returns a combined font-src value.');
  }
}


// Parse Font Variant
// ------------------
@include test-module('Parse Font Variant [function]') {
  @include test('Single variant') {
    $expect: (
      'style': 'normal',
      'weight': 'bold',
    );

    @include assert-equal(
      _parse-font-variant('bold'),
      $expect,
      'Parses a single variant, and returns normal for the other.');
  }

  @include test('Multiple variants') {
    $expect: (
      'style': 'italic',
      'weight': 500,
    );

    @include assert-equal(
      _parse-font-variant(500 'italic'),
      $expect,
      'Parses both style and weight variants.');
  }
}


// Import Font Face [mixin]
// ------------------------
@include test-module('Import Font Face [mixin]') {
  @include test('Font-face import for default formats') {
    @include assert {
      @include output(false) {
        @include _import-font-face('myFont', 'path/to/myFont');
      }

      @include expect(false) {
        @font-face {
          font-family: "myFont";
          font-style: normal;
          font-weight: normal;
          src: url("../fonts/path/to/myFont.woff") format("woff"), url("../fonts/path/to/myFont.ttf") format("truetype");
        }
      }
    }
  }

  @include test('Font-face import for default formats') {
    @include assert {
      @include output(false) {
        @include _import-font-face('myFont', 'path/to/myFont', 'bold', 'eot' 'svg');
      }

      @include expect(false) {
        @font-face {
          font-family: "myFont";
          font-style: normal;
          font-weight: bold;
          src: url("../fonts/path/to/myFont.eot") format("embedded-opentype");
          src: url("../fonts/path/to/myFont.eot?#iefix") format("embedded-opentype"), url("../fonts/path/to/myFont.svg#myFont") format("svg");
        }
      }
    }
  }
}
