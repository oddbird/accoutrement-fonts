// Configuration Tests
// ===================

$fonts: (
  'body-font': (
    'name': 'Source Sans Pro',
    'stack': ('Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'),
    'formats': 'woff' 'svg' 'eot',
    'normal': 'sans/sourcesanspro-regular-webfont',
    'italic': 'sans/sourcesanspro-italic-webfont',
    'bold': (
      'path': 'sans/sourcesanspro-bold-webfont',
      'local': 'source-sans-pro-bold' 'Source Sans Pro bold',
      'ttf': 'sans-ttf/sourcesanspro-bold-webfont',
      'woff': 'data:application/x-font-woff;charset=utf-8;base64...',
      'svgid': 'boldID',
    ),
  ),

  'TestFont': (
    'stack': ('Georgia', 'serif'),
  ),

  'alias': 'body-font',
  'kevin bacon': 'alias',
);


@include describe('Add Font [mixin]') {
  $partial: (
    'name': 'FranklinGothic',
    'stack': ('Helvetica', 'Arial', 'sans-serif'),
  );

  $franklin: (
    'name': 'FranklinGothic',
    'stack': ('Helvetica', 'Arial', 'sans-serif'),
    'normal': 'franklingothic-regular-filename',
    'bold': 'franklingothic-bold-filename',
    'formats': 'woff2' 'woff',
  );

  @include it('Adds a font to the global variable') {
    @include assert-false(
      map-get($fonts, 'sans')
    );

    @include add-font('sans', $partial);

    @include assert-equal(
      map-get($fonts, 'sans'),
      $partial
    );
  }

  @include it('Allows you to override with a force argument') {
    @include assert-unequal(
      map-get($fonts, 'sans'),
      $franklin
    );

    @include add-font('sans', $franklin, 'force');

    @include assert-equal(
      map-get($fonts, 'sans'),
      $franklin
    );
  }
}
