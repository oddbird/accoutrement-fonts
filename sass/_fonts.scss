// Fonts API
// =========


// Font Formats
// ------------
/// The file formats to include when importing a font-face.
/// @group config
/// @type List
$font-formats: 'woff' 'ttf' !default;


// Font Path
// ---------
/// The path to your fonts directory,
/// often relative to your output CSS.
/// @group config
/// @type String
$font-path: '../fonts/' !default;


// Fonts
// -----
/// A map for managing all your fonts on a project.
/// @group config
/// @type Map
/// @prop {Map} <key> -
///   Give each font a key for access in the code,
///   with a nested map defining the font details.
/// @prop {String} <key>.name [<key>] -
///   The actual name of the font-face,
///   if it's different from the given <key>.
/// @prop {List} <key>.stack -
///   A list of fallback fonts
///   for browsers that can't load the given webfont.
/// @prop {String} <key>.<variant> -
///   Add keys for each font-variant
///   (normal, bold, italic, bold italic, etc):
///   - local path values will have `$font-path` prepended,
///     and `$font-formats` appended for loading.
///   - `false` values will not be loaded.
///     Use this option to document variants that will be injected by a CDN
///     like Typekit or Google Fonts.
/// @example scss -
///   $fonts: (
///     '<key>': (
///       '<local variant>': 'path/to-font-name',
///       '<pathless variant>': false,
///     ),
///     'sans': (
///       'name': 'FranklinGothic',
///       'stack': ('Helvetica', 'Arial', 'sans-serif'),
///       'regular': 'franklingothic-regular-filename',
///       'bold': 'franklingothic-bold-filename',
///       'bold' 'italic': 'franklingothic-bolditalic-filename',
///     ),
///   );
$fonts: () !default;


// Font-URL [function]
// -------------------
/// Get a CSS-ready URL function (`url('my/path')`) with
/// the full path to a file in the fonts directory.
/// @group fonts
/// @param {String} $path -
///   A path relative to the fonts directory.
/// @return {String} -
///   The full path to a font file, in CSS `url('my/path')` format.
@function font-url(
  $path
) {
  $full-path: quote($font-path + $path);
  @return url($full-path);
}


// Font Family [function]
// ----------------------
/// Access a font-family from your `$fonts` map.
/// @group fonts
/// @param {String} $key -
///   The key-name of a font in your `$fonts` map.
/// @return {String} -
///   The full font-stack for the given font,
///   ready for output with the `font-family` property.
@function font-family(
  $key
) {
  $font: map-get($fonts, $key);
  $name: map-get($font, 'name') or $key;
  @return join($name, map-get($font, 'stack'), 'comma');
}


// Font Family [mixin]
// -------------------
/// Output a font-stack to font-family based on your `$fonts` configuration.
/// @group fonts
/// @param {String} $key -
///   The key-name of a font in your `$fonts` map.
@mixin font-family(
  $key
) {
  font-family: font-family($key);
}


// Font Face [mixin]
// -----------------
/// Import any local webfont defined in your `$fonts` configuration
/// (variants without a path will not be imported).
/// @group fonts
/// @param {String} $key -
///   The key-name of a font in your `$fonts` map.
/// @param {List} $formats [$font-formats] -
///   The font file formats (e.g. 'ttf', 'otf', 'woff') to import.
///   Font files will be imported in the order given.
@mixin font-face(
  $key,
  $formats: $font-formats
) {
  $var-options: join($_font-style-options, $_font-weight-options);
  $var-options: join($var-options, ('normal', 'regular'));
  $font: _font-get($key);
  $name: $key;
  $variants: ();

  @each $key, $value in $font {
    $first: nth($key, 1);

    @if ($first == 'name') {
      $name: $value;
    } @else if index($var-options, $first) {
      $variants: map-merge($variants, ($key: $value));
    }
  }

  @if (length($variants) > 0) {
    @each $variant, $path in $variants {
      $variant: if(($variant == 'regular'), 'normal', $variant);

      @if $path {
        @include _import-font-face($name, $path, $variant, $formats);
      }
    }
  }
}


// Import WebFonts [mixin]
// -----------------------
/// Import webfonts from your font config list.
/// @group fonts
/// @param {Map} $fonts [$fonts] -
///   A map of your font configuration.
/// @param {List} $formats [$font-formats] -
///   The font file formats (e.g. 'ttf', 'otf', 'woff') to import.
///   Font files will be imported in the order given.
@mixin import-webfonts(
  $fonts: $fonts,
  $formats: $font-formats
) {
  @each $key, $value in $fonts {
    @if type-of($value) == 'map' {
      @include font-face($key, $font-formats);
    }
  }
}
