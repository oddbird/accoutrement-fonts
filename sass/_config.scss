// Font Configuration
// ==================


// Font Path
// ---------
/// The path to your fonts directory,
/// often relative to your output CSS.
/// @group config
/// @type String
$font-path: '../fonts/' !default;


// Fonts
// -----
/// A map for managing all your fonts on a project.
/// Give each font a semantic access-key and fallback stack,
/// and provide import url's for local font files as-needed.
///
/// Safely provide any extra data you need access to,
/// since accoutrement-type will ignore unknown font properties.
/// For example,
/// we often include a `source` property in our font maps,
/// providing a link to the font foundry, license, or CDN.
/// If you are using [Herman][http://oddbird.net/herman/]
/// to generate style-guides and font previews,
/// it will include `source` links in the output.
///
/// @group config
/// @type Map
/// @prop {map} <key> -
///   Give each font a key for access in the code,
///   with a nested map defining the font details.
/// @prop {string} <key>.name [<key>] -
///   The actual name of the font-face,
///   if it's different from the given <key>.
/// @prop {list} <key>.stack -
///   A list of fallback fonts
///   for browsers that can't load the given webfont.
/// @prop {list} <key>.local -
///   Names to use for `local()` installed-font src values.
///   Will default to font `name` if undefined.
/// @prop {string} <key>.<variant> -
///   Add keys for each font-variant
///   (normal, bold, italic, bold italic, etc).
///   Local path values will have `$font-path` prepended,
///   and `$font-formats` appended for loading.
/// @example scss
///   $fonts: (
///     'sans': (
///       'name': 'FranklinGothic',
///       'stack': ('Helvetica', 'Arial', 'sans-serif'),
///       'regular': 'franklingothic-regular-filename',
///       'bold': 'franklingothic-bold-filename',
///       'bold' 'italic': 'franklingothic-bolditalic-filename',
///       // safely document any additional font data you want…
///       'source': 'https://www.fontspring.com/fonts/exljbris/museo-sans',
///     ),
///     'uri-font': (
///       'name': 'My Font',
///       'stack': ('Helvetica', 'Arial', 'sans-serif'),
///       'regular': (
///         'woff2': 'data:application/font-woff2;charset=utf-8;base64,…',
///       ),
///       'bold': (
///         'woff2': 'data:application/font-woff2;charset=utf-8;base64,…',
///       ),
///     ),
///   );
$fonts: () !default;



// Add Font
// --------
/// Merge individual font maps into the global `$fonts` variable.
/// This can be useful for internal organization,
/// documentation with [SassDoc][SassDoc],
/// or integration with our pattern-library generator:
/// [Herman][Herman].
///
/// [SassDoc]: http://sassdoc.com/
/// [Herman]: http://oddbird.net/herman/
///
/// @group config
///
/// @parameter {map} $key -
///   Give your font a semantic name
///   for easy access across your project.
/// @parameter {map} $map -
///   Pass any number of maps to be merged.
/// @output -
///   An updated global `$fonts` variable,
///   with new maps merged in.
///
/// @example scss
///   $franklin: (
///     'name': 'FranklinGothic',
///     'stack': ('Helvetica', 'Arial', 'sans-serif'),
///   );
///
///   @include add-font('heading', $franklin);
@mixin add-font (
  $key,
  $map,
  $force: false
) {
  @if map-get($fonts, $key) and not $force {
    @error 'Font key `#{$key}` already exists. Rename or $force to continue';
  }

  $new: ($key: $map);
  $fonts: map-merge($fonts, $new) !global;
}
